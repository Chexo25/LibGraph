template<class TArc>
PClique_max<TArc>::PClique_max()
{
}

template<class TArc>
PClique_max<TArc>::~PClique_max()
{
	CLIResetCliqueMax();
}

template <class TArc>
bool PClique_max<TArc>::CLIIsClique(const vector<PSommet<TArc>*>& CLIvSommet) {
	size_t stSizevSommet = CLIvSommet.size();
	if ((unsigned int)stSizevSommet == 1)
	{
		return true;
	}
	for (size_t stIndex1 = 0; stIndex1 < CLIvSommet.size(); ++stIndex1) {
		for (size_t stIndex2 = 0; stIndex2 < CLIvSommet.size(); ++stIndex2) {
			if (stIndex1 == stIndex2) continue;
			PSommet<TArc>* PSommet1 = CLIvSommet[stIndex1];
			PSommet<TArc>* PSommet2 = CLIvSommet[stIndex2];
			bool bClique = false;

			for (TArc* arc : PSommet1->SOMGetArcD()) {
				if (arc->ARCGetNumeroA() == PSommet2->SOMGetNumero()) {
					bClique = true;
				}
			}
			if (!bClique)
			{
				return false; //PSommet1 n'est pas relié à PSommet2
			}
		}
	}
	return true;
}

template<class TArc>
void PClique_max<TArc>::CLIResetCliqueMax()
{
	stTailleMaxClique = 0;
	for (size_t stIterator = 0; stIterator < vvCliques_Max.size(); stIterator++)
	{
		vvCliques_Max[stIterator].clear();
	}
	vvCliques_Max.clear();
}

template<class TArc>
void PClique_max<TArc>::CLIEnuCliqueMax(PGraph<TArc> Graph, vector<PSommet<TArc>*> ListeSommet)
{
	vector<TArc*> vListeArc;
	PSommet<TArc>* pSommet;
	vector<PSommet<TArc>*> vListeSommet = Graph.GORGetSommet();
	if (vListeSommet.size() == 0)
	{
		if (ListeSommet.size() > stTailleMaxClique)
		{
			CLIResetCliqueMax();
			stTailleMaxClique = ListeSommet.size();
			vvCliques_Max.push_back(ListeSommet);
		}
		else if (ListeSommet.size() == stTailleMaxClique)
		{
			vvCliques_Max.push_back(ListeSommet);
		}
	}
	else
	{
		for (size_t stIterator = 0; stIterator < vListeSommet.size(); stIterator++)
		{
			pSommet = vListeSommet[stIterator];
			vListeArc = pSommet->SOMGetArcA();

			ListeSommet.push_back(pSommet);

			Graph.GORSupprimerSommet(pSommet);

			if (CLIIsClique(ListeSommet))
			{
				CLIEnuCliqueMax(Graph, ListeSommet);
			}
			else
			{
				ListeSommet.pop_back();
				CLIEnuCliqueMax(Graph, ListeSommet);
			}

			Graph.GORAjouterSommet(pSommet);
			for (int iIteratorArc = 0; iIteratorArc < vListeArc.size(); iIteratorArc++)
			{
				Graph.GORAjouterArc(vListeArc[iIteratorArc]);
			}
		}
	}
}
